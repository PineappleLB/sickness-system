<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sickness.dao.DoctorMapper" >
  <resultMap id="BaseResultMap" type="com.sickness.entity.Doctor" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="doctor_name" property="doctorName" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="solt" property="solt" jdbcType="VARCHAR" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="auth" property="auth" jdbcType="BIT" />
    <result column="gender" property="gender" jdbcType="TINYINT" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="work_address" property="workAddress" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, doctor_name, account, password, solt, contact, auth, gender, department_id, work_address, 
    title
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_doctor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_doctor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sickness.entity.Doctor" >
    insert into t_doctor (id, doctor_name, account, 
      password, solt, contact, 
      auth, gender, department_id, 
      work_address, title)
    values (#{id,jdbcType=INTEGER}, #{doctorName,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{solt,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, 
      #{auth,jdbcType=BIT}, #{gender,jdbcType=TINYINT}, #{departmentId,jdbcType=INTEGER}, 
      #{workAddress,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sickness.entity.Doctor" >
    insert into t_doctor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="doctorName != null" >
        doctor_name,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="solt != null" >
        solt,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="auth != null" >
        auth,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="workAddress != null" >
        work_address,
      </if>
      <if test="title != null" >
        title,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="doctorName != null" >
        #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="solt != null" >
        #{solt,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="auth != null" >
        #{auth,jdbcType=BIT},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="workAddress != null" >
        #{workAddress,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sickness.entity.Doctor" >
    update t_doctor
    <set >
      <if test="doctorName != null" >
        doctor_name = #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="solt != null" >
        solt = #{solt,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="auth != null" >
        auth = #{auth,jdbcType=BIT},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="workAddress != null" >
        work_address = #{workAddress,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sickness.entity.Doctor" >
    update t_doctor
    set doctor_name = #{doctorName,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      solt = #{solt,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      auth = #{auth,jdbcType=BIT},
      gender = #{gender,jdbcType=TINYINT},
      department_id = #{departmentId,jdbcType=INTEGER},
      work_address = #{workAddress,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>