<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sickness.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.sickness.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="user_real_name" property="userRealName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="solt" property="solt" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="BIT" />
    <result column="birthday" property="birthday" jdbcType="BIGINT" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="home_address" property="homeAddress" jdbcType="VARCHAR" />
    <result column="work_address" property="workAddress" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="area_id" property="areaId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, account, user_real_name, password, solt, gender, birthday, contact, home_address, 
    work_address, email, area_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sickness.entity.User" >
    insert into t_user (id, account, user_real_name, 
      password, solt, gender, 
      birthday, contact, home_address, 
      work_address, email, area_id
      )
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{userRealName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{solt,jdbcType=VARCHAR}, #{gender,jdbcType=BIT}, 
      #{birthday,jdbcType=BIGINT}, #{contact,jdbcType=VARCHAR}, #{homeAddress,jdbcType=VARCHAR}, 
      #{workAddress,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{areaId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sickness.entity.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="userRealName != null" >
        user_real_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="solt != null" >
        solt,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="homeAddress != null" >
        home_address,
      </if>
      <if test="workAddress != null" >
        work_address,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="areaId != null" >
        area_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="userRealName != null" >
        #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="solt != null" >
        #{solt,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=BIT},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=BIGINT},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="homeAddress != null" >
        #{homeAddress,jdbcType=VARCHAR},
      </if>
      <if test="workAddress != null" >
        #{workAddress,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null" >
        #{areaId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sickness.entity.User" >
    update t_user
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="userRealName != null" >
        user_real_name = #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="solt != null" >
        solt = #{solt,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=BIT},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=BIGINT},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="homeAddress != null" >
        home_address = #{homeAddress,jdbcType=VARCHAR},
      </if>
      <if test="workAddress != null" >
        work_address = #{workAddress,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null" >
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sickness.entity.User" >
    update t_user
    set account = #{account,jdbcType=VARCHAR},
      user_real_name = #{userRealName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      solt = #{solt,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIT},
      birthday = #{birthday,jdbcType=BIGINT},
      contact = #{contact,jdbcType=VARCHAR},
      home_address = #{homeAddress,jdbcType=VARCHAR},
      work_address = #{workAddress,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      area_id = #{areaId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>